{"swagger": "2.0", "info": {"title": "", "description": "", "version": ""}, "paths": {"/accounts/tokens": {"get": {"responses": {"200": {"description": ""}}, "summary": "Returns all the tokens for the current user.", "parameters": [], "operationId": "tokens_list", "tags": ["accounts"], "description": "Returns all the tokens for the current user."}}, "/accounts/tokens/{token}": {"get": {"responses": {"200": {"description": ""}}, "summary": "Returns all the tokens for the current user.", "parameters": [{"type": "string", "required": true, "name": "token", "description": "", "in": "path"}], "operationId": "tokens_read", "tags": ["accounts"], "description": "Returns all the tokens for the current user."}, "post": {"responses": {"201": {"description": ""}}, "summary": "Creates and returns a new auth token for the authenticated user.", "parameters": [{"type": "string", "required": true, "name": "token", "description": "", "in": "path"}], "operationId": "tokens_create", "tags": ["accounts"], "description": "Creates and returns a new auth token for the authenticated user."}, "delete": {"responses": {"204": {"description": ""}}, "summary": "View to Create, Get, and Remove tokens. These tokens", "parameters": [{"type": "string", "required": true, "name": "token", "description": "", "in": "path"}], "operationId": "tokens_delete", "tags": ["accounts"], "description": "View to Create, Get, and Remove tokens. These tokens\ndiffer from the JWT Tokens used for user authentication in that\nthey never change. These should only be used to allow applications\naccess to the API."}}, "/auth/token-refresh": {"post": {"responses": {"201": {"description": ""}}, "summary": "API View that returns a refreshed token (with new expiration) based on", "consumes": ["application/json"], "parameters": [{"schema": {"type": "object", "required": ["token"], "properties": {"token": {"type": "string", "description": ""}}}, "in": "body", "name": "data"}], "operationId": "token-refresh_create", "tags": ["auth"], "description": "API View that returns a refreshed token (with new expiration) based on\nexisting token\n\nIf 'orig_iat' field (original issued-at-time) is found, will first check\nif it's within expiration window, then copy it to the new token"}}, "/data/countries": {"get": {"responses": {"200": {"description": ""}}, "summary": "Returns all countries in the system.", "parameters": [{"type": "integer", "required": false, "name": "page", "description": "A page number within the paginated result set.", "in": "query"}], "operationId": "countries_list", "tags": ["data"], "description": "Returns all countries in the system."}, "post": {"responses": {"201": {"description": ""}}, "summary": "View to retrieve all countries from the API", "consumes": ["application/json"], "parameters": [{"schema": {"type": "object", "required": ["code"], "properties": {"code": {"type": "string", "description": ""}}}, "in": "body", "name": "data"}], "operationId": "countries_create", "tags": ["data"], "description": "View to retrieve all countries from the API"}}, "/data/countries/{id}": {"get": {"responses": {"200": {"description": ""}}, "summary": "View to retrieve all countries from the API", "parameters": [{"type": "integer", "required": true, "name": "id", "description": "A unique integer value identifying this country code.", "in": "path"}], "operationId": "countries_read", "tags": ["data"], "description": "View to retrieve all countries from the API"}, "put": {"responses": {"200": {"description": ""}}, "summary": "View to retrieve all countries from the API", "consumes": ["application/json"], "parameters": [{"type": "integer", "required": true, "name": "id", "description": "A unique integer value identifying this country code.", "in": "path"}, {"schema": {"type": "object", "required": ["code"], "properties": {"code": {"type": "string", "description": ""}}}, "in": "body", "name": "data"}], "operationId": "countries_update", "tags": ["data"], "description": "View to retrieve all countries from the API"}, "patch": {"responses": {"200": {"description": ""}}, "summary": "View to retrieve all countries from the API", "consumes": ["application/json"], "parameters": [{"type": "integer", "required": true, "name": "id", "description": "A unique integer value identifying this country code.", "in": "path"}, {"schema": {"type": "object", "properties": {"code": {"type": "string", "description": ""}}}, "in": "body", "name": "data"}], "operationId": "countries_partial_update", "tags": ["data"], "description": "View to retrieve all countries from the API"}, "delete": {"responses": {"204": {"description": ""}}, "summary": "View to retrieve all countries from the API", "parameters": [{"type": "integer", "required": true, "name": "id", "description": "A unique integer value identifying this country code.", "in": "path"}], "operationId": "countries_delete", "tags": ["data"], "description": "View to retrieve all countries from the API"}}, "/data/ingredients/fermentables": {"get": {"responses": {"200": {"description": ""}}, "summary": "Returns all fermentables that are approved in the system by default.", "parameters": [], "operationId": "ingredients_fermentables_list", "tags": ["data"], "description": "Returns all fermentables that are approved in the system by default."}}, "/data/ingredients/fermentables/types": {"get": {"responses": {"200": {"description": ""}}, "summary": "Returns all fermentable types in the system", "parameters": [], "operationId": "ingredients_fermentables_types_list", "tags": ["data"], "description": "Returns all fermentable types in the system"}}, "/data/ingredients/hops": {"get": {"responses": {"200": {"description": ""}}, "summary": "Returns all hops that are approved in the system by default.", "parameters": [], "operationId": "ingredients_hops_list", "tags": ["data"], "description": "Returns all hops that are approved in the system by default."}}, "/data/ingredients/hops/types": {"get": {"responses": {"200": {"description": ""}}, "summary": "Returns all hop types in the system", "parameters": [], "operationId": "ingredients_hops_types_list", "tags": ["data"], "description": "Returns all hop types in the system"}}, "/data/ingredients/yeast": {"get": {"responses": {"200": {"description": ""}}, "summary": "Returns all approved yeast strains.", "parameters": [], "operationId": "ingredients_yeast_list", "tags": ["data"], "description": "Returns all approved yeast strains."}}, "/data/ingredients/yeast/types": {"get": {"responses": {"200": {"description": ""}}, "summary": "Returns all approved yeast types by default.", "parameters": [], "operationId": "ingredients_yeast_types_list", "tags": ["data"], "description": "Returns all approved yeast types by default."}}, "/data/styles": {"get": {"responses": {"200": {"description": ""}}, "summary": "Returns all the beer styles. Do not show suggested", "parameters": [], "operationId": "styles_list", "tags": ["data"], "description": "Returns all the beer styles. Do not show suggested\nbeer styles by default."}}, "/rest-auth/login/": {"post": {"responses": {"201": {"description": ""}}, "summary": "Check the credentials and return the REST Token", "consumes": ["application/json"], "parameters": [{"schema": {"type": "object", "required": ["password"], "properties": {"username": {"type": "string", "description": ""}, "password": {"type": "string", "description": ""}, "email": {"type": "string", "description": ""}}}, "in": "body", "name": "data"}], "operationId": "login_create", "tags": ["rest-auth"], "description": "Check the credentials and return the REST Token\nif the credentials are valid and authenticated.\nCalls Django Auth login method to register User ID\nin Django session framework\n\nAccept the following POST parameters: username, password\nReturn the REST Framework Token Object's key."}}, "/rest-auth/logout/": {"get": {"responses": {"200": {"description": ""}}, "summary": "Calls Django logout method and delete the Token object", "parameters": [], "operationId": "logout_list", "tags": ["rest-auth"], "description": "Calls Django logout method and delete the Token object\nassigned to the current User object.\n\nAccepts/Returns nothing."}, "post": {"responses": {"201": {"description": ""}}, "summary": "Calls Django logout method and delete the Token object", "parameters": [], "operationId": "logout_create", "tags": ["rest-auth"], "description": "Calls Django logout method and delete the Token object\nassigned to the current User object.\n\nAccepts/Returns nothing."}}, "/rest-auth/password/change/": {"post": {"responses": {"201": {"description": ""}}, "summary": "Calls Django Auth SetPasswordForm save method.", "consumes": ["application/json"], "parameters": [{"schema": {"type": "object", "required": ["new_password1", "new_password2"], "properties": {"new_password1": {"type": "string", "description": ""}, "new_password2": {"type": "string", "description": ""}}}, "in": "body", "name": "data"}], "operationId": "password_change_create", "tags": ["rest-auth"], "description": "Calls Django Auth SetPasswordForm save method.\n\nAccepts the following POST parameters: new_password1, new_password2\nReturns the success/fail message."}}, "/rest-auth/password/reset/": {"post": {"responses": {"201": {"description": ""}}, "summary": "Calls Django Auth PasswordResetForm save method.", "consumes": ["application/json"], "parameters": [{"schema": {"type": "object", "required": ["email"], "properties": {"email": {"type": "string", "description": ""}}}, "in": "body", "name": "data"}], "operationId": "password_reset_create", "tags": ["rest-auth"], "description": "Calls Django Auth PasswordResetForm save method.\n\nAccepts the following POST parameters: email\nReturns the success/fail message."}}, "/rest-auth/password/reset/confirm/": {"post": {"responses": {"201": {"description": ""}}, "summary": "Password reset e-mail link is confirmed, therefore", "consumes": ["application/json"], "parameters": [{"schema": {"type": "object", "required": ["new_password1", "new_password2", "uid", "token"], "properties": {"new_password1": {"type": "string", "description": ""}, "token": {"type": "string", "description": ""}, "new_password2": {"type": "string", "description": ""}, "uid": {"type": "string", "description": ""}}}, "in": "body", "name": "data"}], "operationId": "password_reset_confirm_create", "tags": ["rest-auth"], "description": "Password reset e-mail link is confirmed, therefore\nthis resets the user's password.\n\nAccepts the following POST parameters: token, uid,\nnew_password1, new_password2\nReturns the success/fail message."}}, "/rest-auth/registration/": {"post": {"responses": {"201": {"description": ""}}, "operationId": "registration_create", "consumes": ["application/json"], "tags": ["rest-auth"], "parameters": [{"schema": {"type": "object", "required": ["username", "password1", "password2"], "properties": {"username": {"type": "string", "description": ""}, "password2": {"type": "string", "description": ""}, "email": {"type": "string", "description": ""}, "password1": {"type": "string", "description": ""}}}, "in": "body", "name": "data"}]}}, "/rest-auth/registration/verify-email/": {"post": {"responses": {"201": {"description": ""}}, "operationId": "registration_verify-email_create", "consumes": ["application/json"], "tags": ["rest-auth"], "parameters": [{"schema": {"type": "object", "required": ["key"], "properties": {"key": {"type": "string", "description": ""}}}, "in": "body", "name": "data"}]}}, "/rest-auth/user/": {"get": {"responses": {"200": {"description": ""}}, "summary": "Reads and updates UserModel fields", "parameters": [{"type": "integer", "required": false, "name": "page", "description": "A page number within the paginated result set.", "in": "query"}], "operationId": "user_list", "tags": ["rest-auth"], "description": "Reads and updates UserModel fields\nAccepts GET, PUT, PATCH methods.\n\nDefault accepted fields: username, first_name, last_name\nDefault display fields: pk, username, email, first_name, last_name\nRead-only fields: pk, email\n\nReturns UserModel fields."}, "put": {"responses": {"200": {"description": ""}}, "summary": "Reads and updates UserModel fields", "consumes": ["application/json"], "parameters": [{"schema": {"type": "object", "required": ["username"], "properties": {"username": {"type": "string", "description": "Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only."}, "last_name": {"type": "string", "description": ""}, "first_name": {"type": "string", "description": ""}}}, "in": "body", "name": "data"}], "operationId": "user_update", "tags": ["rest-auth"], "description": "Reads and updates UserModel fields\nAccepts GET, PUT, PATCH methods.\n\nDefault accepted fields: username, first_name, last_name\nDefault display fields: pk, username, email, first_name, last_name\nRead-only fields: pk, email\n\nReturns UserModel fields."}, "patch": {"responses": {"200": {"description": ""}}, "summary": "Reads and updates UserModel fields", "consumes": ["application/json"], "parameters": [{"schema": {"type": "object", "properties": {"username": {"type": "string", "description": "Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only."}, "last_name": {"type": "string", "description": ""}, "first_name": {"type": "string", "description": ""}}}, "in": "body", "name": "data"}], "operationId": "user_partial_update", "tags": ["rest-auth"], "description": "Reads and updates UserModel fields\nAccepts GET, PUT, PATCH methods.\n\nDefault accepted fields: username, first_name, last_name\nDefault display fields: pk, username, email, first_name, last_name\nRead-only fields: pk, email\n\nReturns UserModel fields."}}}, "securityDefinitions": {"api_key": {"type": "apiKey", "in": "header", "name": "Authorization"}}}