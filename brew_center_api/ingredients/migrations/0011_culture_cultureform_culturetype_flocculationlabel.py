# Generated by Django 3.2.7 on 2021-10-27 16:20

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('ingredients', '0010_alter_hopvariety_substitutes'),
    ]

    operations = [
        migrations.CreateModel(
            name='CultureForm',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('is_active', models.BooleanField(default=False)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='CultureType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('is_active', models.BooleanField(default=False)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='FlocculationLabel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('is_active', models.BooleanField(default=False)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Culture',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('product_id', models.CharField(blank=True, max_length=255, null=True)),
                ('min_temp_f', models.FloatField(blank=True, null=True)),
                ('max_temp_f', models.FloatField(blank=True, null=True)),
                ('alcohol_tolerance_percent', models.FloatField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(1)])),
                ('min_attenuation_percent', models.FloatField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(1)])),
                ('max_attenuation_percent', models.FloatField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(1)])),
                ('notes', models.TextField(blank=True, null=True)),
                ('best_for', models.CharField(blank=True, max_length=255, null=True)),
                ('max_reuse', models.IntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0)])),
                ('is_pof_positive', models.BooleanField(blank=True, null=True)),
                ('is_glucoamylase_positive', models.BooleanField(blank=True, null=True)),
                ('is_zymocide_no1', models.BooleanField(blank=True, null=True)),
                ('is_zymocide_no2', models.BooleanField(blank=True, null=True)),
                ('is_zymocide_no28', models.BooleanField(blank=True, null=True)),
                ('is_zymocide_klus', models.BooleanField(blank=True, null=True)),
                ('is_zymocide_neutral', models.BooleanField(blank=True, null=True)),
                ('flocculation', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='ingredients.flocculationlabel')),
                ('form', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ingredients.cultureform')),
                ('manufacturer', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='ingredients.manufacturer')),
                ('type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ingredients.culturetype')),
            ],
            options={
                'ordering': ['name'],
            },
        ),
    ]
